$date
	Mon Dec 11 16:12:11 2023
$end
$version
	GTKWave Analyzer v3.3.117 (w)1999-2023 BSI
$end
$timescale
	1ps
$end
$scope module cpu_test $end
$scope module cpu_inst $end
$scope module memory_program $end
$var wire 16 ) data_in[15:0] $end
$upscope $end
$scope module controller $end
$var reg 6 " state[5:0] $end
$upscope $end
$scope module ula_inst $end
$var wire 16 . operand_b[15:0] $end
$var reg 16 / out[15:0] $end
$upscope $end
$scope module ir_regiser $end
$var reg 16 ( out[15:0] $end
$upscope $end
$scope module controller $end
$var reg 11 $ actual_addr_inst[10:0] $end
$upscope $end
$scope module memory_program $end
$var wire 16 & data_out[15:0] $end
$upscope $end
$scope module stack_data $end
$var reg 16 + data_out[15:0] $end
$upscope $end
$scope module routine_stack $end
$var wire 11 0 data_in[10:0] $end
$upscope $end
$scope module memory_program $end
$var wire 11 % addr[10:0] $end
$upscope $end
$scope module routine_stack $end
$var reg 11 1 data_out[10:0] $end
$upscope $end
$scope module stack_data $end
$var wire 16 * data_in[15:0] $end
$var wire 32 , pointer[31:0] $end
$upscope $end
$scope module routine_stack $end
$var wire 16 2 pointer[15:0] $end
$upscope $end
$scope module ip_regiser $end
$var reg 11 ' out[10:0] $end
$upscope $end
$scope module controller $end
$var reg 16 # data_to_stack[15:0] $end
$upscope $end
$scope module ula_inst $end
$var wire 16 - operand_a[15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 '
b0 %
bx #
bx /
bz )
b0 "
b0 +
b0 (
b0 -
b0 0
b0 2
bx $
b0 1
b0 .
bx &
bx *
b0 ,
$end
#3000
b1 "
b100000000010 &
#5000
b10 "
#7000
b11 "
b100000000010 (
#9000
b10011 "
b10 #
#11000
b1001 "
b10 *
#13000
b1 ,
b10100 "
#15000
b10000 "
#17000
b10001 "
#19000
b1 "
b1 '
b1 %
b1 0
b100000000011 &
#21000
b10 "
#23000
b11 "
b100000000011 (
#25000
b10011 "
b11 #
#27000
b1001 "
b11 *
#29000
b10100 "
b10 ,
#31000
b10000 "
#33000
b10001 "
#35000
b1 "
b1010000000000110 &
b10 '
b10 0
b10 %
#37000
b10 "
#39000
b11 "
b0 /
b1010000000000110 (
#41000
b1011 "
#43000
b11010 "
b1 2
#45000
b1010 "
b101 $
#47000
b101 %
b10000 "
b101 0
b101 '
#49000
b10001 "
#51000
b1 "
b10000000000000 &
b110 '
b110 %
b110 0
#53000
b10 "
#55000
b11 "
b10000000000000 (
#57000
b100 "
#59000
b10101 "
b11 +
b1 ,
#61000
b101 "
b11 -
b11 /
#63000
b110 "
#65000
b10110 "
b0 ,
b10 +
#67000
b111 "
b101 /
b10 .
#69000
b1000 "
#71000
b10111 "
b101 #
#73000
b1001 "
b101 *
#75000
b10100 "
b1 ,
#77000
b10000 "
#79000
b10001 "
#81000
b1 "
b111 0
b111 %
b1100000000000 &
b111 '
#83000
b10 "
#85000
b11 "
b1100000000000 (
bx /
#87000
b100 "
#89000
b10101 "
b101 +
b0 ,
#91000
b1111 "
#93000
b10000 "
#95000
b10001 "
#97000
b1 "
b1000 '
b1000 0
b1010100000000000 &
b1000 %
#99000
b10 "
#101000
b11 "
b1 /
b1010100000000000 (
#103000
b1100 "
#105000
b11011 "
b0 2
b10 1
#107000
b10 $
b1010 "
#109000
b10000 "
b10 %
b1010000000000110 &
b10 0
b10 '
#111000
b10001 "
#113000
b1 "
b11 '
b11 0
b100000000011 &
b11 %
#115000
b10 "
#117000
b11 "
b100000000011 (
bx /
#119000
b10011 "
b11 #
#121000
b1001 "
b11 *
#123000
b10100 "
b1 ,
#125000
b10000 "
#127000
b10001 "
#129000
b1 "
b100 %
b100000000100 &
b100 0
b100 '
#131000
b10 "
#133000
b11 "
b100000000100 (
#135000
b100 #
b10011 "
#137000
b1001 "
b100 *
#139000
b10100 "
b10 ,
#141000
b10000 "
#143000
b10001 "
#145000
b1 "
b101 '
b101 0
b1010000000000110 &
b101 %
#147000
b10 "
#149000
b11 "
b101 /
b1010000000000110 (
#151000
b1011 "
#153000
b11010 "
b1 2
#155000
b1010 "
b101 $
#157000
b10000 "
#159000
b10001 "
#161000
b1 "
b110 %
b10000000000000 &
b110 0
b110 '
#163000
b10 "
#165000
b11 "
b10000000000000 (
#167000
b100 "
#169000
b10101 "
b1 ,
b100 +
#171000
b101 "
b110 /
b100 -
#173000
b110 "
#175000
b10110 "
b11 +
b0 ,
#177000
b111 "
b11 .
b111 /
#179000
b1000 "
#181000
b10111 "
b111 #
#183000
b111 *
b1001 "
#185000
b10100 "
b1 ,
#187000
b10000 "
#189000
b10001 "
#191000
b1 "
b111 '
b111 0
b1100000000000 &
b111 %
#193000
b10 "
#195000
b11 "
bx /
b1100000000000 (
#197000
b100 "
#199000
b10101 "
b0 ,
b111 +
#201000
b1111 "
#203000
b10000 "
#205000
b10001 "
#207000
b1 "
b1000 %
b1010100000000000 &
b1000 0
b1000 '
#209000
b10 "
#211000
b11 "
b1010100000000000 (
b1 /
#213000
b1100 "
#215000
b11011 "
b101 1
b0 2
#217000
b1010 "
#219000
b10000 "
b101 '
b101 0
b1010000000000110 &
b101 %
#221000
b10001 "
#223000
b1 "
b110 %
b10000000000000 &
b110 0
b110 '
#225000
b10 "
#227000
b11 "
b10000000000000 (
b111 /
#229000
b100 "
#231000
b10101 "
bx +
b11111111111111111111111111111111 ,
#233000
b101 "
bx /
bx -
#235000
b110 "
#237000
b10110 "
b11111111111111111111111111111110 ,
#239000
b111 "
bx .
#241000
b1000 "
#243000
b10111 "
bx #
#245000
b1001 "
bx *
#247000
b11111111111111111111111111111111 ,
b10100 "
#249000
b10000 "
#251000
b10001 "
#253000
b1 "
b111 '
b111 0
b1100000000000 &
b111 %
#255000
b10 "
#257000
b11 "
b1100000000000 (
#259000
b100 "
#261000
b10101 "
b11111111111111111111111111111110 ,
#263000
b1111 "
#265000
b10000 "
#267000
b10001 "
#269000
b1 "
b1000 %
b1010100000000000 &
b1000 0
b1000 '
#271000
b10 "
#273000
b11 "
b1010100000000000 (
#275000
b1100 "
#277000
b11011 "
b1111111111111111 2
bx 1
#279000
b1010 "
bx $
#281000
bx '
b10000 "
bx 0
bx &
bx %
#283000
b10001 "
#285000
b1 "
#287000
b10 "
